apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: telemetry-system
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093
  clusterIP: None  # headless service for StatefulSet
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: telemetry-system
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka:9093,1@kafka-1.kafka:9093,2@kafka-2.kafka:9093"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(POD_NAME).kafka:9092"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: telemetry-system
spec:
  ports:
    - port: 6379
      name: redis
  clusterIP: None
  selector:
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: telemetry-system
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: telemetry-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: sshewalkar4094/telemetry-ingestor:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_BROKERS
              value: kafka:9092
            - name: REDIS_ADDR
              value: redis:6379
            - name: KAFKA_TOPIC
              value: telemetry
            - name: KAFKA_GROUPID
              value: telemetry-group
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: telemetry-system
spec:
  selector:
    app: gateway
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: gateway
  namespace: telemetry-system
spec:
  to:
    kind: Service
    name: gateway
  port:
    targetPort: 8080
  tls:
    termination: edge 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-simulator
  namespace: telemetry-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iot-simulator
  template:
    metadata:
      labels:
        app: iot-simulator
    spec:
      containers:
        - name: iot-simulator
          image: sshewalkar4094/iot-simulator:latest
          env:
            - name: GATEWAY_URL
              value: http://gateway:8080/v1/telemetry
